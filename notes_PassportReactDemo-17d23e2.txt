
INITIAL
of this repo is from
https://github.com/humblewebdev/PassportReactDemo
commits 17d23e2

//=================================================================================
OBSERVATION

- coding for to sign of new user is in
      routes\auth.js

    app.post('/api/users', (request, response) => {
        const body = request.body;
        models.user.create({
            username: body.username,
            password: body.password,
            email: DataTypes.STRING,
            first_name: DataTypes.STRING,
            last_name: DataTypes.STRING,
        }).then(() => {
            response.send();
        })
    });

  so the other route would be to authenticate signing in user

--------------------

//=================================================================================
MODIFIED

- this would allow you to put your own secret-string
  in strategies\jwt.js
  add
      require('dotenv').config();
  on codes first line;
  change
      'secretOrKey': 'your_jwt_secret'
  to
      'secretOrKey': process.env.JWTSECRET

  then at root directory, created file ".env" with content
      JWTSECRET="secret-string"
  "secret-string" is arbitrary
  (dont put tab in front of JWTSECRET when placed in .env)

--------------------

- in routes\auth.js

    app.post('/api/users', (request, response) => {
        const body = request.body;
        models.user.create({
            username: body.username,
            password: body.password,
            email: DataTypes.STRING,
            first_name: DataTypes.STRING,
            last_name: DataTypes.STRING,
        }).then(() => {
            response.send();
        })
    });

	that block may somehow tied to the authentication scheme, therefore creates a
	new route, something like

			import models from '../models';
			export default function (app) {
				app.post('/api/testUserSignup', (request, response) => {
					const body = request.body;
					models.User.create({
						username: body.username,
						password: body.password,
						email: body.email,
						first_name: body.first_name,
						last_name: body.first_name

					}).then(() => {
						response.send();

					}).catch((error) => {
						console.log(error);
					})
				});
			}

	so at the time when doing a http-post, call to 
			/api/testUserSignup

//=================================================================================
CERTAIN



//=================================================================================
--------------------
----------------------------------------
------------------------------------------------------------
//---------------------------------------------------------------------------------
